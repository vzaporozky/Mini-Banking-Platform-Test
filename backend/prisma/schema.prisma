generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  username   String    @unique
  email      String    @unique
  fullname   String
  password   String
  created_at DateTime  @default(now())
  accounts   Account[]

  @@map("users")
}

model Account {
  id               String        @id @default(uuid())
  userId           String
  currency         String
  balance          Decimal       @default(0.0)
  created_at       DateTime      @default(now())
  user             User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  ledgerEntries    Ledger[]
  fromTransactions Transaction[] @relation("FromAccount")
  toTransactions   Transaction[] @relation("ToAccount")

  @@map("accounts")
}

model Transaction {
  id            String   @id @default(uuid())
  fromAccountId String?
  toAccountId   String?
  amount        Decimal
  currency      String
  type          String
  created_at    DateTime @default(now())
  ledgerEntries Ledger[]
  fromAccount   Account? @relation("FromAccount", fields: [fromAccountId], references: [id])
  toAccount     Account? @relation("ToAccount", fields: [toAccountId], references: [id])

  @@map("transactions")
}

model Ledger {
  id            String      @id @default(uuid())
  accountId     String
  transactionId String
  amount        Decimal
  type          String
  created_at    DateTime    @default(now())
  account       Account     @relation(fields: [accountId], references: [id], onDelete: Cascade)
  transaction   Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)

  @@map("ledger")
}

